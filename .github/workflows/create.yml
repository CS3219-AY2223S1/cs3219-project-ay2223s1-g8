name: Create GKE cluster and setup environment

on: 
  workflow_dispatch:
    branches: [ "main", "prod" ]
  # push:
  #   branches: [ "main", "prod", "automation" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GKE_CLUSTER: peerprep-cluster
  GKE_ZONE: us-central1

jobs:
  terraform:
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GKE_TERRAFORM_CREDS }}
    name: "Terraform - Create cluster"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Format
        id: fmt
        run: |
          cd deployment/terraform
          terraform fmt -check

      - name: Terraform Init
        id: init
        run: |
          cd deployment/terraform
          terraform init
          
      - name: Terraform Plan
        id: plan
        run: |
          cd deployment/terraform
          terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        run: |
          cd deployment/terraform
          terraform apply -auto-approve
  
      - name: Terraform Apply Cleanup
        if: steps.apply.outcome == 'failure'
        run: |
          cd deployment/terraform
          terraform destroy -auto-approve
  bootstrap:
    name: bootstrap-cluster
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
      
       - name: Set up GKE credentials
         uses: 'google-github-actions/get-gke-credentials@v0'
         with:
            cluster_name: ${{ env.GKE_CLUSTER }}
            location: ${{ env.GKE_ZONE }}
            credentials: ${{ secrets.GKE_SA_KEY }}
  #     - id: get-pods
  #       if: github.ref == 'refs/heads/master' && github.event_name == 'push' 
  #       run: kubectl get pods -A 

  #     - id: install-flagger 
  #       if: github.ref == 'refs/heads/master' && github.event_name == 'push' 
  #       run: |
  #         helm repo add flagger https://flagger.app
  #         helm install my-flagger flagger/flagger --version 1.4.2