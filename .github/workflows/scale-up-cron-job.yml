name: Scale up cron job

on:
  workflow_dispatch:
    branches: [ "main", "prod" ]
  # schedule: 
  #     - cron: "0 1 * * *" # 1am UTC (9am SGT)

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GKE_CLUSTER: peerprep-cluster
  GKE_ZONE: us-central1

jobs:
  scale:
    name: Scale up to 1 replica
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
        with:
          service_account_key: ${{ secrets.GKE_TERRAFORM_CREDS }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_TERRAFORM_CREDS }}

      - name: Scale up to 1 replica
        run: |-
          kubectl apply -f ./deployment/microservices/user-service.yaml
          kubectl apply -f ./deployment/microservices/matching-service.yaml
          kubectl apply -f ./deployment/microservices/question-service.yaml
          kubectl apply -f ./deployment/microservices/history-service.yaml
          kubectl apply -f ./deployment/microservices/communication-service.yaml
          kubectl apply -f ./deployment/microservices/collab-service.yaml
          kubectl apply -f ./deployment/microservices/frontend.yaml
          kubectl rollout status deployment/user-service
          kubectl rollout status deployment/matching-service
          kubectl rollout status deployment/question-service
          kubectl rollout status deployment/history-service
          kubectl rollout status deployment/communication-service
          kubectl rollout status deployment/collab-service
          kubectl rollout status deployment/frontend
